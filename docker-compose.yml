# version: '3.3'

services:
  db:
    container_name: db
    image: postgres:16.1-alpine
    ports:
      - "5432:5432"
    # volumes:
    #   - ./data/db:/var/lib/postgresql/data
    networks:
      - app-network

  web:
    build:
          context: .
          dockerfile: ./docker/backend/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - db
  
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./docker/frontend/${DOCKERFILE_ENV_FRONT}
    environment:
     CHOKIDAR_USEPOLLING: "true"

    ports:
      - "${FRONTEND_PORTS}"
    restart: always
    networks:
      - app-network
    volumes:
      # - "./:/frontend:delegated"
      - "./frontend:/frontend:delegated"
      - node_modules:/frontend/node_modules
    env_file:
      - ./.env
  
  nginx:
    container_name: nginx
    build: 
      context: .
      dockerfile: docker/nginx/${DOCKERFILE_ENV_NGINX}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/backend/static
    networks:
      - app-network
    depends_on:
      - web
      - frontend

volumes:
  node_modules:
  static:

networks:
  app-network:
    driver: bridge